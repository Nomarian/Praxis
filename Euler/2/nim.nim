

#[Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
]#

let pnum = 4_000_000

proc direct(n: int): int = # result is the sum
 var (a,b) = (1,2)

 while a < n:
  if a mod 2 == 0: result += a
  (a,b) = (b, a+b)

# Will return all the numbers in the fibonacci sequence
iterator ifib(): int = 
 var (a,b) = (0,1)
 while true: 
  (a,b) = (b,a+b)
  yield b

proc iterative(n: int): int = # result is the sum
 for i in ifib():
  if i > n: break
  if i mod 2 == 0: result += i

# const solution = direct(4_000_000)
#echo direct(4_000_000)
#echo iterative(pnum)
